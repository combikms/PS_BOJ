import sys

N = int(sys.stdin.readline())

# 15의 배수 특: 5의 배수 && 3의 배수
# => 합이 3의 배수고 뒷자리가 5로 끝나야 함
# => 1의 개수 % 3 == 5의 개수 % 3를 만족하고 5로 끝나야 함

# 1515의 자리는?
# 0 1515  => C(1514, 0)
# 3 1512  => C(1514, 3)
# ...
# 1512 3  => C(1514, 1512)
# 1515 0  => 얘는 5를 놓을 자리가 없어서 탈락
# N의 자리: C(N - 1, 0) + C(N - 1, 3) + ... + C(N - 1, 가장 가까이 있는 놈)

# => 그럼 이항 계수를 미리 구해놓자

C = [[0] * 1516 for _ in range(1516)]
for i in range(1516):
    C[i][0] = 1
    C[i][i] = 1
for i in range(1, 1516):
    for j in range(i + 1):
        C[i][j] = C[i - 1][j - 1] + C[i - 1][j]

# 1515  => mod가 0
# 0 1515 (O)
# 1 1514 (X)
# 2 1513 (X)
# => C(1514, 0) + C(1514, 3) + C(1514, 6) + ... + C(1514, 1512)

# 1514  => mod가 2
# 0 1514 (X)
# 1 1513 (O)
# 2 1512 (X)
# => C(1513, 1) + C(1513, 4) + ... + C(1513, 1513)

# 1513  => mod가 1
# 0 1513 (X)
# 1 1512 (X)
# 2 1511 (O)

# 즉 0 -> 0, 1 -> 2. 2 -> 1 로 만들어야 함


def foo(N):
    if N % 3 == 0:
        return 0
    elif N % 3 == 1:
        return 2
    else:
        return 1


ans = 0
for i in range(foo(N), N, 3):
    ans += C[N - 1][i]

print(ans % 1000000007)